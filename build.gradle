// Querydsl 버전 plugins
buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.11'
	id 'io.spring.dependency-management' version '1.1.0'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10" // querydsl 플러그인
}

group = 'com.theZ'
version = '0.0.1'

java {
	sourceCompatibility = '17'
}

jar {
	enabled = false
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	testImplementation 'org.springframework.security:spring-security-test'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	runtimeOnly 'com.mysql:mysql-connector-j'
	implementation 'org.mariadb.jdbc:mariadb-java-client'

	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
	implementation 'org.mapstruct:mapstruct:1.5.3.Final'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.jeasy:easy-random-core:5.0.0'
	implementation 'org.springframework.boot:spring-boot-starter-mail:2.7.1'
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
	developmentOnly("org.springframework.boot:spring-boot-devtools")
	implementation 'io.springfox:springfox-boot-starter:3.0.0'
	implementation 'io.awspring.cloud:spring-cloud-starter-aws:2.3.1'
	implementation 'software.amazon.awssdk:s3:2.17.89'

	// socket
	implementation 'org.springframework.boot:spring-boot-starter-websocket'

	// fcm
	implementation 'com.google.firebase:firebase-admin:9.1.1'
	implementation 'com.squareup.okhttp3:okhttp:4.11.0'
}

test {
	useJUnitPlatform()
}

// queryDSL 추가 : QueryDSL 빌드 옵션
def querydslDir = "$buildDir/generated/'querydsl'"

/*** comileQuerydsl.doFirst 추가*/
compileQuerydsl.doFirst {
	if(file(querydslDir).exists() )
		delete(file(querydslDir))
}

// JPA 사용여부 및 사용 경로 설정
querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}

// build시 사용할 sourceSet 추가 설정
sourceSets {
	main.java.srcDir querydslDir
}


// querydsl 컴파일 시 사용할 옵션 설정
compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}

// querydsl이 compileClassPath를 상속하도록 설정
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}
